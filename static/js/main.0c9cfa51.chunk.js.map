{"version":3,"sources":["Component/ContactForm/ContactForm.module.css","Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","Component/ElementContactList/ElementContactList.module.css","Component/Container/Container.module.css","Component/Container/Container.js","Component/ContactForm/ContactForm.js","Component/Filter/Filter.js","Component/ElementContactList/ElementContactList.js","Component/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","contacts_form","htmlFor","label","type","pattern","title","required","onChange","id","input","form_button","Component","defaultProps","Filter","ElementContactList","contact_name","contact_number","ContactList","shownContacts","onClick","contact_list","map","contact_item","item_button","App","contacts","filter","formAddContact","console","log","contact","contactNames","renderContacts","contactsList","contactName","newContact","includes","alert","changeFilter","target","getFilteredContacts","normalizedFilter","toLowerCase","deleteContact","contactId","prevState","React","contactsUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c9cfa51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_form\":\"ContactForm_contacts_form__1Wb-f\",\"form_button\":\"ContactForm_form_button__29U6I\",\"label\":\"ContactForm_label__1Q-Iu\",\"input\":\"ContactForm_input__1jmut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat_list\":\"ContactList_stat_list__G9pyV\",\"item\":\"ContactList_item__2N46Y\",\"contact_list\":\"ContactList_contact_list__vbkwn\",\"contact_item\":\"ContactList_contact_item__3NMII\",\"item_button\":\"ContactList_item_button__ij-ic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"Filter_friend_list__2itwR\",\"item\":\"Filter_item__uyPen\",\"avatar\":\"Filter_avatar__1TR73\",\"name\":\"Filter_name__OE1xw\",\"status_isOnline\":\"Filter_status_isOnline__3Gt1t\",\"status_isOffline\":\"Filter_status_isOffline__66RRx\",\"label\":\"Filter_label__3mK0w\",\"input\":\"Filter_input__2mwz9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_name\":\"ElementContactList_contact_name__1BZe2\",\"contact_number\":\"ElementContactList_contact_number__3ymgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2e0et\"};","import React from 'react';\r\nimport styles from './Container.module.css'\r\n\r\nconst Container = ({ children }) =>\r\n    <div className={styles.Container}>{children}</div>\r\n    \r\nexport default Container;","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static defaultProps = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n   static propTypes = {\r\n        name: PropTypes.string,\r\n        number: PropTypes.string,        \r\n  };\r\n  \r\n  state = {\r\n    name: '',\r\n    number: ''\r\n    // name: this.props.name,\r\n    // number: this.props.number\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  /** Отвечает за обновление состояния*/\r\n   handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  /** Вызывается при отправке формы */\r\n  // Проп который передается форме для вызова при сабмите\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n     this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\nrender() {\r\n    const { name, number } = this.state;\r\n    \r\n  return (\r\n      <>\r\n      <form onSubmit={this.handleSubmit} className={styles.contacts_form}>\r\n        <div>\r\n           <label htmlFor={this.nameInputId} className={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={name}              \r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n            className = {styles.input}\r\n            />\r\n        </label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor={this.numberInputId} className={styles.label}>\r\n          Number\r\n           <input\r\n            type=\"tel\"\r\n            value={number}  \r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n            className = {styles.input}\r\n          />\r\n        </label>\r\n\r\n        </div>   \r\n        \r\n        <button type=\"submit\" className={styles.form_button}>Add contact</button>\r\n      </form>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contact by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n  className = {styles.input} />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../ElementContactList/ElementContactList.module.css\";\r\n\r\nconst ElementContactList = ({ name, number }) => {\r\n    return (<>\r\n        <span className={styles.contact_name}>{name}: </span>\r\n        <span className={styles.contact_number}>{number}</span>\r\n    </>\r\n        );\r\n    };\r\n\r\nElementContactList.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string\r\n}\r\n\r\nElementContactList.defaultProps = {\r\n    name: \"Hello World\",\r\n    number: 123456789\r\n}\r\nexport default ElementContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ElementContactList from \"../ElementContactList/ElementContactList\";\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ shownContacts, onClick }) => {\r\n    return (\r\n    <ul className={styles.contact_list}>\r\n            {shownContacts().map(({id, name, number}) => {\r\n              return (<li key={id} className={styles.contact_item}><ElementContactList\r\n                    name={name}\r\n                    number={number} />\r\n                <button type='button' onClick={() => { onClick(id) }} className={styles.item_button}>Delete</button>\r\n                </li>)\r\n            })}\r\n        </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n    shownContacts: PropTypes.func.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from 'prop-types';\r\nimport Container from './Component/Container/Container';\r\nimport ContactForm from './Component/ContactForm/ContactForm';\r\nimport Filter from './Component/Filter/Filter';\r\nimport ContactList from './Component/ContactList/ContactList';\r\nimport contactsUser from \"./json/contacts.json\";\r\n\r\n\r\n// import TransactionHistory from './Component/TransactionHistory/TransactionHistory';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  static defaultProps = {\r\n    contacts: contactsUser,\r\n    filter: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    contacts: PropTypes.array,\r\n    filter: PropTypes.string,\r\n  };\r\n  \r\n  \r\n  state = {\r\n    contacts: this.props.contacts,\r\n    filter: this.props.filter,\r\n  };\r\n\r\n  \r\n  formAddContact = ({ name, number }) => {\r\n    console.log(name, number);\r\n    \r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number      \r\n    };\r\n    const contactNames = this.state.contacts.map(contact => contact.name);\r\n    this.renderContacts(contactNames, contact.name, contact);\r\n  };\r\n  \r\n  renderContacts = (contactsList, contactName, newContact) => {\r\n    if (contactsList.includes(contactName)) {\r\n      alert(`${contactName} is already in contacts`)\r\n    } else {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [...contacts, newContact],\r\n      }));\r\n    };   \r\n  };\r\n\r\n  changeFilter = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n\r\n  getFilteredContacts = () => {\r\n    const normalizedFilter = this.state.filter.toLowerCase();\r\n\r\n    return this.state.contacts.filter(contact => {\r\n      return contact.name.toLowerCase().includes(normalizedFilter)\r\n    })\r\n   };\r\n \r\n  deleteContact = (contactId) => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    //  const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <h1>Phonebook</h1>\r\n          <ContactForm\r\n            onSubmit={this.formAddContact} />\r\n\r\n          <h2>Contacts</h2>\r\n          <Filter\r\n          value={this.state.filter}\r\n          onChange={ this.changeFilter }/>\r\n          <ContactList\r\n          shownContacts={this.getFilteredContacts}\r\n          onClick={  this.deleteContact}/>\r\n        </div>\r\n      </Container>\r\n      \r\n    );\r\n  };\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}